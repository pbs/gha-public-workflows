name: Template - Run Task

on:
  workflow_call:
    inputs:
      env:
        type: string
        description: 'Environment'
        required: true
      ecs_cluster:
        type: string
        description: 'ECS cluster name'
        required: true
      task_name:
        type: string
        description: 'Task name'
        required: true
      container_name:
        type: string
        description: 'Container name'
        required: true
      command:
        type: string
        description: 'Run command'
        required: true
      run_task_network_config:
        type: string
        description: 'Run task network config'
        required: true

jobs:
  run-task:
    runs-on: ubuntu-latest
    environment:
        name: ${{ inputs.env }}
        url: ${{ vars.APP_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
            fetch-depth: 0

      - name: Assume aws role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/service/${{ vars.AWS_OIDC_ROLE }}

      - id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ vars.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "[${{ vars.APP_NAME }} ${{ inputs.env }}] Run ${{ inputs.task_name }} task",
              "attachments": [
                {
                  "color": "${{ env.SLACK_COLOR }}",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "In Progress"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_COLOR: dbab09

      - name: Run ${{ inputs.task_name }} - ${{ inputs.env }}
        id: run-task
        run: |
          OVERRIDE_START='{ "containerOverrides": [{"name": "${{ inputs.container_name }}", "environment": [ { "name": "ENV_RUN_COMMAND", "value":'
          COMMAND='"${{ inputs.command }}"'
          OVERRIDE_END='} ] } ] }'
          OVERRIDE="${OVERRIDE_START} ${COMMAND} ${OVERRIDE_END}"
          echo "Running task with override " $OVERRIDE
          aws ecs run-task --cluster ${{ inputs.ecs_cluster }} \
            --task-definition ${{ vars.APP_NAME }}-${{ inputs.env }}-command \
            --network-configuration="${{ inputs.run_task_network_config }}" \
            --launch-type=FARGATE --overrides "$OVERRIDE"
        continue-on-error: true

      - uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ vars.SLACK_CHANNEL_ID }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": "[${{ vars.APP_NAME }} ${{ inputs.env }}] Run ${{ inputs.task_name }} task - completed",
              "attachments": [
                {
                  "color": "${{ env.SLACK_COLOR }}",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "${{ steps.run-task.outcome }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_COLOR: ${{ steps.run-task.outcome == 'success' && '90ee90' || 'ff0000' }}

      - name: Set job end status
        if: steps.run-task.outcome != 'success'
        run: |
          if [ "${{ steps.run-task.outcome }}" == "failure" ]; then
            echo "::error step=build::Failed to run ${{ inputs.task_name }}"; exit 1
          fi
